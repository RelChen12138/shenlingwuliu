<template>
  <div class="dashboard-container edit-order">
    <div class="app-container">
      <!-- 订单卡片 -->
      <el-card
        shadow="never"
        class="order-box"
      >
        <!-- 订单信息栏，一行分成四列 -->
        <el-row
          :gutter="20" // 列与列之间的间隔
          justify="center" // 水平对齐方式为居中
        >
          <el-col :span="6"> <!-- 第一列 -->
            <div class="ddbh"> <!-- 订单编号 -->
              订单编号：
              <label>{{ orderDetailShow.id }}</label> <!-- 订单编号展示 -->
            </div>
          </el-col>

          <el-col :span="6"> <!-- 第二列 -->
            <div class="ydbh"> <!-- 运单编号 -->
              运单编号：
              <label>{{ orderDetailShow.transportOrder ? orderDetailShow.transportOrder.id : '--' }}</label> <!-- 运单编号展示 -->
            </div>
          </el-col>

          <el-col :span="6"> <!-- 第三列 -->
            <div class="xdsj"> <!-- 下单时间 -->
              下单时间：
              <label>{{ orderDetailShow.createTime }}</label> <!-- 下单时间展示 -->
            </div>
          </el-col>

          <el-col :span="6"> <!-- 第四列 -->
            <div class="ddzt"> <!-- 订单状态 -->
              订单状态：
              <label v-if="orderDetailShow.status == ' 23000'">待取件</label> <!-- 订单状态展示，根据订单状态码显示不同状态 -->
              <label v-else-if="orderDetailShow.status == '23001'">已取件</label>
              <label v-else-if="orderDetailShow.status == '23003'">网点入库</label>
              <label v-else-if="orderDetailShow.status == '23004'">待装车</label>
              <label v-else-if="orderDetailShow.status == '23005'">运输中</label>
              <label v-else-if="orderDetailShow.status == '23006'">网点出库</label>
              <label v-else-if="orderDetailShow.status == '23007'">待派送</label>
              <label v-else-if="orderDetailShow.status == '23008'">派送中</label>
              <label v-else-if="orderDetailShow.status == '23009'">已签收</label>
              <label v-else-if="orderDetailShow.status == '23010'">拒收</label>
              <label v-else>已取消</label>
            </div>
          </el-col>

          <el-col :span="6"> <!-- 第五列 -->
            <div class="yjddrq"> <!-- 预计到达日期 -->
              预计到达日期：
              <label>{{ orderDetailShow.estimatedArrivalTime }}</label> <!-- 预计到达日期展示 -->
            </div>
          </el-col>

        </el-row> <!-- 订单信息栏结束 -->
      </el-card> <!-- 订单卡片结束 -->
    </div>
  </div>
</template>

<el-collapse
        v-model="activeNames" // 控制折叠面板打开/关闭的属性，与 data 中的 activeNames 对应
        style="margin-top: 20px; border: none" // 样式
      >
        <el-collapse-item name="1"> <!-- 折叠面板的一个子项，它的 name 属性与 activeNames 中的某个值对应 -->
          <template slot="title">
            <div class="collapse-detail">基本信息</div> <!-- 折叠面板的标题 -->
          </template>
          <div class="block">
            <el-timeline> <!-- 时间轴组件 -->
              <div class="line"></div> <!-- 时间轴的线 -->
              <div
                class="pake-info"
                style="margin-top: 10px"
              >
                <img
                  class="img-info1"
                  src="../../assets/fahuo.png"
                  alt=""
                />
                <span>发货方</span> <!-- 发货方的标题 -->
              </div>
              <div style="margin-top: 0px; margin-left: 40px; display: flex"> <!-- 发货方信息 -->
                <div style="">
                  <div class="demo-input-suffix base-info">
                    发货方姓名：
                    <span>{{ orderDetailShow.senderName }}</span> <!-- 发货方姓名展示 -->
                  </div>

                  <div class="demo-input-suffix base-info">
                    发货方地址：
                    <span>{{
                      orderDetailShow.senderProvince.name +
                        orderDetailShow.senderCity.name +
                        orderDetailShow.senderCounty.name
                    }}</span> <!-- 发货方地址展示 -->
                  </div>
                </div>
                <div style="margin-left: 174px">
                  <div class="demo-input-suffix base-info">
                    发货方电话：
                    <span>{{ orderDetailShow.senderPhone }}</span> <!-- 发货方电话展示 -->
                  </div>
                  <div class="demo-input-suffix base-info">
                    &nbsp;&nbsp;&nbsp;详细地址：
                    <span>{{ orderDetailShow.senderAddress }}</span> <!-- 发货方详细地址展示 -->
                  </div>
                </div>
              </div>
              <div
                class="pake-info"
                style="margin-top: 20px"
              >
                <img
                  class="img-info2"
                  src="../../assets/shouhuo.png"
                  alt=""
                />
                <span
                  style="display: inline-block; margin-top: 6px"
                >收货方</span> <!-- 收货方的标题 -->
              </div>
              <div style="margin-top: 0px; margin-left: 40px; display: flex"> <!-- 收货方信息 -->
                <div style="">
                  <div class="demo-input-suffix base-info">
                    收货方姓名：
                    <span>{{ orderDetailShow.receiverName }}</span> <!-- 收货方姓名展示 -->
                  </div>

                  <div class="demo-input-suffix base-info">
                    收货方地址：
                    <span>{{
                      orderDetailShow.receiverProvince.name +
                        orderDetailShow.receiverCity.name +
                        orderDetailShow.receiverCounty.name
                    }}</span> <!-- 收货方地址展示 -->
                  </div>
                </div>
                <div style="margin-left: 174px">
                  <div class="demo-input-suffix base-info">
                    收货方电话：
                    <span>{{ orderDetailShow.receiverPhone }}</span> <!-- 收货方电话展示 -->
                  </div>
                  <div class="demo-input-suffix base-info">
                    &nbsp;&nbsp;&nbsp;详细地址：
                    <span>{{ orderDetailShow.receiverAddress }}</span> <!-- 收货方详细地址展示 -->
                  </div>
                </div>
              </div>
              <div
                class="pake-info"
                style="margin-top: 20px"
              >
                <img
                  class="img-info2"
                  src="../../assets/juli.png"
                  alt=""
                />
                <span
                  style="display: inline-block; margin-top: 6px"
                >距离:<span style="font-size: 12px"> {{ orderDetailShow.distance }}</span></span>
                <!-- 距离信息展示 -->
              </div>
              <div
                class="pake-info"
                style="margin-top: 20px"
              >
                <span
                  style="display: inline-block; margin-top: 6px;margin-left:30px"
                >备注：暂无</span>
                <!-- 备注信息展示 -->
              </div>
            </el-timeline>
          </div>

        </el-collapse-item>
      </el-collapse> <!-- 折叠面板结束 -->


      <script>
import showOrderMapsDialog from './components/show-order-maps.vue' // 引入地图组件
import { orderDetail } from '@/api/order' // 引入接口函数

export default {
  components: {
    showOrderMapsDialog // 注册地图组件
  },
  data() {
    return {
      taskDispatchEstimatedEndTime: '', // 派送任务预计结束时间
      taskDispatchestimatedStartTime: '', // 派送任务预计开始时间
      taskPickupEstimatedEndTime: '', // 取件任务预计结束时间
      taskPickupestimatedStartTime: '', // 取件任务预计开始时间
      disMobile: '', // 派件人电话
      disName: '', // 派件人姓名
      mobile: '', // 取件人电话
      name: '', // 取件人姓名
      disPathName: '', // 取件员
      agencyName: '', // 代办点名称
      formData: { // 地图相关的数据
        startLat: '', // 地图起点纬度
        startLng: '', // 地图起点经度
        endLat: '', // 地图终点纬度
        endLng: '' // 地图终点经度
      },
      titleInfo: { // 地图相关的数据
        pageTitle: '', // 地图页面标题
        text: '' // 地图页面文本信息
      },
      orderDetailShow: { // 运单详情信息
        receiverCounty: '', // 收货地址县
        receiverCity: '', // 收货地址市
        receiverProvince: '', // 收货地址省
        senderProvince: '', // 发货地址省
        senderCity: '', // 发货地址市
        senderCounty: '' // 发货地址县
      },
      activeNames: ['1', '2', '3', '4', '5', '6', '7'], // 折叠面板默认展开项
      propTableData: { // 面板列表数据，包括列名和行数据
        col: []
      },
      wayId: '' // 运单 id
    }
  },
  created() {
    this.wayId = this.$route.query.id // 获取路由参数中的运单 id
    this.getList(this.wayId) // 调用获取运单详情函数
  },
  methods: {
    // 获取运单详情
    async getList(wayId) {
      const { data } = await orderDetail(wayId) // 调用接口函数获取运单详情
      this.orderDetailShow = data // 将获取到的运单详情赋值给组件 data 中的变量 orderDetailShow
      console.log(data)

      // 取件任务相关信息
      this.taskPickupEstimatedEndTime = this.orderDetailShow.taskPickup.estimatedEndTime // 取件任务预计结束时间
      this.taskPickupestimatedStartTime = this.orderDetailShow.taskPickup.estimatedStartTime // 取件任务预计开始时间
      console.log('------------', this.orderDetailShow.taskPickup.estimatedEndTime)
      this.agencyName = this.orderDetailShow.taskPickup.agency.name // 代办点名称
      this.name = this.orderDetailShow.taskPickup.courier.name // 取件人姓名
      this.mobile = this.orderDetailShow.taskPickup.courier.mobile // 取件人电话

      // 派送任务相关信息
      if (this.orderDetailShow.taskDispatch) { // 如果存在派送任务，再获取相关信息
        this.disName = this.orderDetailShow.taskDispatch.agency.name // 派件人姓名
        this.disPathName = this.orderDetailShow.taskDispatch.courier.name // 取件员
        this.disMobile = this.orderDetailShow.taskDispatch.courier.mobile // 派件人电话
        this.taskDispatchEstimatedEndTime = this.orderDetailShow.taskDispatch.estimatedEndTime // 派送任务预计结束时间
        this.taskDispatchestimatedStartTime = this.orderDetailShow.taskDispatch.estimatedStartTime // 派送任务预计开始时间
      }
    }
  }
}
</script>

async onSearch() { // 异步函数，触发搜索事件
      const res = await orderList({ // 调用 orderList 函数，传入搜索条件
        amount: '', // 金额
        createTime: '', // 创建时间
        estimatedArrivalTime: '', // 预计到达时间
        id: this.orderSearchFormData.id, // 运单 id
        memberId: '', // 会员 id
        orderType: '', // 订单类型
        page: 1, // 初始页数
        pageSize: 10, // 页面显示的数据数量
        paymentMethod: '', // 支付方式
        paymentStatus: this.orderSearchFormData.PaidStatus, // 支付状态
        pickupType: '', // 取件类型
        receiverAddress: '', // 收货方详细地址
        receiverCityId: this.orderSearchFormData.receiverCityId, // 收货方所在城市的编号
        receiverCountyId: this.orderSearchFormData.receiverCountyId, // 收货方所在区/县的编号
        receiverName: this.orderSearchFormData.receiverName, // 收货方姓名
        receiverPhone: this.orderSearchFormData.receiverPhone, // 收货方电话
        receiverProvinceId: this.orderSearchFormData.receiverProvinceId, // 收货方所在省份的编号
        senderAddress: '', // 发货方详细地址
        senderCityId: this.orderSearchFormData.city, // 发货方所在城市的编号
        senderCountyId: this.orderSearchFormData.senderCountyId, // 发货方所在区/县的编号
        senderName: this.orderSearchFormData.sendName, // 发货方姓名
        senderPhone: this.orderSearchFormData.sendPhone, // 发货方电话
        senderProvinceId: this.orderSearchFormData.provinceId, // 发货方所在省份的编号
        status: this.orderSearchFormData.orderStatus // 运单状态
      })
      this.dataList = res.data.items // 将搜索结果赋值给 dataList 数据，用于页面渲染
    },

    handleSizeChange(pageSize) { // 分页条数改变事件处理函数
      this.orderSearchFormData.pageSize = pageSize // 将页面条数记录下来
      this.getList() // 调用 getList 函数，重新获取相应数据
    },
    handleCurrentChange(page) { // 页码改变事件处理函数
      this.orderSearchFormData.page = page // 记录页面改变后的页码
      this.getList() // 调用 getList 函数，重新获取相应数据
    }

    <el-option // 单个选项组件
    v-for="item in ProvinceList" // 对 ProvinceList 数组进行循环渲染，每个 item 代表数组中的元素
    :key="item.id" // 为每个选项添加唯一 key 值，用于提高渲染效率
    :label="item.name" // 设置选项的显示文字，此处显示省份名称
    :value="item.id" // 设置选项的值，此处为省份 id
/>

<el-select // select 选择器组件
    v-model="orderSearchFormData.receiverProvinceId" // 选择器绑定的值
    placeholder="请选择省" // 默认显示的提示文字
    clearable // 是否可清空选项
    @change="isreceiveSelCity" // 绑定 change 事件触发的函数
>


async isSelDistrict() { // 异步函数，获取区域列表信息
      const res = await areaList({ parentId: this.orderSearchFormData.city }) // 调用 areaList 函数，传入当前城市 id，获取对应区域列表
      this.DistrictList = res.data // 将获取到的区域列表赋值给 DistrictList 数据，用于后续操作
    },
    async isreceiveSelCity() { // 异步函数，获取收货方所在城市列表
      const res = await areaList({ parentId: this.orderSearchFormData.receiverProvinceId }) // 调用 areaList 函数，传入收货方所在省份 id，获取对应城市列表
      this.receiverCityList = res.data // 将获取到的城市列表赋值给 receiverCityList 数据，用于后续操作
    },
    async isreceiveSelCounty() { // 异步函数，获取收货方所在区域列表
      const res = await areaList({ parentId: this.orderSearchFormData.receiverCityId }) // 调用 areaList 函数，传入收货方所在城市 id，获取对应区域列表
      this.receiverDistrictList = res.data // 将获取到的区域列表赋值给 receiverDistrictList 数据，用于后续操作
    },

  
    async isSelDistrict() {  
      const res = await areaList({ parentId: this.orderSearchFormData.city })
      this.DistrictList = res.data
    },